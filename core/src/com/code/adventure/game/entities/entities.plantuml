@startuml

title __ENTITIES's Class Diagram__\n

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Adventurer {
          + spawnLocation : Vector2
          - position : Vector2
          + lastFramePosition : Vector2
          + nextFramePosition : Vector2
          ~ nextFramevelocity : Vector2
          + velocity : Vector2
          - walkStartTime : long
          - standingStartTime : long
          - jumpStartTime : long
          - attackStartTime : long
          + attackingFlag : boolean
          + walkingFlag : boolean
          + count : short
          + countAttack : short
          + pathCount : short
          + intialposition : Vector2
          + swordHit : boolean
          + playerPassTheItem : boolean
          + leftButtonPressed : boolean
          + rightButtonPressed : boolean
          + jumpButtonPressed : boolean
          + skin : Skin
          + stage : Stage
          + message : Dialog
          - txtMsg : Label
          + pathFinal : short
          + killedEnemies : DelayedRemovalArray<Enemy>
          + newItems : DelayedRemovalArray<Item>
          + Adventurer()
          + spawn()
          + getPosition()
          + update()
          - blockThePlayer()
          ~ landedOnPlatform()
          + moveLeft()
          + moveRight()
          - startAttack()
          - startJump()
          - continueJump()
          - endJump()
          + render()
      }
    }
  }
  

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Enemy {
          + intialIndex : short
          - standingStartTime : long
          - hitStartTime : long
          + deathStartTime : long
          - totalHit : int
          - animation : int
          ~ startDeathAnimation : boolean
          + Enemy()
          + update()
          + isStartDeathSound()
          + render()
          + getTotalHit()
          + setTotalHit()
          + getPosition()
          + setPosition()
          + getIndex()
          + setIndex()
      }
    }
  }
  

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Item {
          - position : Vector2
          - index : short
          - type : String
          + intialIndex : short
          ~ startDeathSound : boolean
          + Item()
          + Item()
          + isStartDeathSound()
          + setType()
          + getType()
          + getPosition()
          + setPosition()
          + getIndex()
          + setIndex()
          + render()
          + update()
      }
    }
  }
  

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Key {
          + intialIndex : short
          + Key()
          + getPosition()
          + setPosition()
          + setIndex()
          + render()
          + getIndex()
      }
    }
  }
  

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Path {
          - endPath : boolean
          + Path()
          + getPosition()
          + setPosition()
          + setIndex()
          + getEndPath()
          + render()
          + getIndex()
      }
    }
  }
  

  package com.code.adventure.game {
    package com.code.adventure.game.entities {
      class Platform {
          + top : float
          + bottom : float
          + left : float
          + right : float
          + position : Vector2
          + width : float
          + Platform()
          + getPosition()
          + widthPlus()
          + getWidth()
          + setPosition()
      }
    }
  }
  

  Adventurer o-- Level : level
  Adventurer o-- Direction : facing
  Adventurer o-- WalkState : walkState
  Adventurer o-- JumpState : jumpState
  Adventurer o-- AttackState : attackState
  Adventurer o-- Enemy : nearEnemy
  Adventurer o-- Item : item
  Enemy -up-|> Item
  Key -up-|> Item
  Path -up-|> Item


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
