ss@startuml

title __GAME's Class Diagram__\n

  package com.code.adventure.game {
    class ChooseLevelScreen {
        - stage : Stage
        - skin : Skin
        - root : Table
        - forLoop : TextButton
        - whileLoop : TextButton
        - doWhileLoop : TextButton
        {static} + gameplayScreen : GameplayScreen
        - dialog : Label
        + ChooseLevelScreen()
        + show()
        + render()
        + resize()
        + hide()
        + pause()
        + resume()
        + dispose()
    }
  }
  

  package com.code.adventure.game {
    class CodeAdventureGame {
        + create()
    }
  }
  

  package com.code.adventure.game {
    class DeathScreen {
        - stage : Stage
        - skin : Skin
        - root : Table
        - respawn : TextButton
        - titleScreen : TextButton
        + currentLevelIndex : short
        + DeathScreen()
        + show()
        + resize()
        + render()
        + hide()
        + pause()
        + resume()
        + dispose()
    }
  }
  

  package com.code.adventure.game {
    class GameplayScreen {
        - batch : SpriteBatch
        - renderer : ShapeRenderer
        {static} + forLoop : ForLoop
        {static} + whileLoop : WhileLoop
        {static} + doWhileLoop : DoWhileLoop
        {static} + whileLoopActive : boolean
        {static} + doWhileLoopActive : boolean
        - levelNames : Array<String>
        + levelIndex : short
        - multiplexer : InputMultiplexer
        - whileLoopInputProcessor : InputProcessor
        - doWhileLoopInputProcessor : InputProcessor
        + GameplayScreen()
        + show()
        + render()
        + resize()
        - onMobile()
        + pause()
        + resume()
        + hide()
        + dispose()
        + startNewLevel()
        + keyDown()
        + keyUp()
        + keyTyped()
        + touchDown()
        + touchUp()
        + touchDragged()
        + mouseMoved()
        + scrolled()
    }
  }
  

  package com.code.adventure.game {
    class Level {
        {static} + TAG : String
        + viewport : Viewport
        {static} - adventurer : Adventurer
        - platforms : DelayedRemovalArray<Platform>
        {static} - polygons : HashMap<String, Polygon>
        {static} - paths : DelayedRemovalArray<Path>
        {static} - items : DelayedRemovalArray<Item>
        + victory : boolean
        + font : BitmapFont
        + resizeCam : boolean
        + Level()
        + render()
        {static} + getPaths()
        {static} + setPaths()
        {static} + setItems()
        {static} + getItems()
        + getViewport()
        {static} + getAdventurer()
        + setAdventurer()
        + getPlatforms()
        + getPolygons()
        + mergePlatforms()
    }
  }
  

  package com.code.adventure.game {
    class MainMenuScreen {
        - stage : Stage
        - skin : Skin
        - root : Table
        - startGame : TextButton
        - quitGame : TextButton
        + MainMenuScreen()
        + show()
        + resize()
        + render()
        + hide()
        + pause()
        + resume()
        + dispose()
    }
  }
  

  package com.code.adventure.game {
    class QuizScreen {
        - stage : Stage
        - skin : Skin
        - root : Table
        - quiz : Element
        - questions : Table
        - answers : Table
        - bottom : Table
        - question : Label
        - answersButtons : ButtonGroup
        - submit : TextButton
        {static} + currentLevel : String
        - questionIndex : int
        - correctAnswerIndex : int
        + QuizScreen()
        + show()
        + render()
        + resize()
        + hide()
        + pause()
        + resume()
        + dispose()
        + loadQuestion()
    }
  }
  

  ChooseLevelScreen -up-|> ScreenAdapter
  ChooseLevelScreen o-- CodeAdventureGame : game
  CodeAdventureGame -up-|> Game
  DeathScreen -up-|> ScreenAdapter
  DeathScreen o-- CodeAdventureGame : game
  GameplayScreen -up-|> InputProcessor
  GameplayScreen -up-|> ScreenAdapter
  GameplayScreen o-- CodeAdventureGame : game
  GameplayScreen o-- Level : level
  GameplayScreen o-- OnscreenControls : onscreenControls
  GameplayScreen o-- GamePlayHud : hud
  GameplayScreen o-- ChaseCam : chaseCam
  Level o-- GameplayScreen : gameplayScreen
  MainMenuScreen -up-|> ScreenAdapter
  MainMenuScreen o-- CodeAdventureGame : game
  QuizScreen -up-|> ScreenAdapter
  QuizScreen o-- CodeAdventureGame : game


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
