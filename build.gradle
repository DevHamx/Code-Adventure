buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
        jcenter()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.6'
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.6'
        

    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "code Adventure"
        gdxVersion = '1.9.9'
        roboVMVersion = '2.3.6'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        compile "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile ("com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion") {
            exclude group: 'com.google.gwt', module: 'gwt-user'
        }
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile ("com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources") {
            exclude group: 'com.google.gwt', module: 'gwt-user'
        }
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

}

tasks.eclipse.doLast {
    delete ".project"
}
task findInDependencies {
    doLast {
        println()

        def resolvableConfigs = project.getConfigurations()
                .stream()
                .filter { it.isCanBeResolved() }

        resolvableConfigs.each { config ->
            config.resolve()
                    .stream()
                    .filter {
                //noinspection GroovyPointlessBoolean
                zipTree(it)
                        .filter { it.name.startsWith 'Nonnegative' }        // TODO replace `Nonnegative` with what you are looking for
                        .each { println "    Match: $it.path" }
                        .toList()
                        .isEmpty() == false
            }
            .each {
                println "Found in `$config.name: $it.name`\n"
            }
        }
    }
}